// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	models "purchase-record/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// INetworkPathService is an autogenerated mock type for the INetworkPathService type
type INetworkPathService struct {
	mock.Mock
}

// GetOrdersFromPath provides a mock function with given fields: filePath
func (_m *INetworkPathService) GetOrdersFromPath(filePath string) ([]models.PurchaseOrder, error) {
	ret := _m.Called(filePath)

	if len(ret) == 0 {
		panic("no return value specified for GetOrdersFromPath")
	}

	var r0 []models.PurchaseOrder
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]models.PurchaseOrder, error)); ok {
		return rf(filePath)
	}
	if rf, ok := ret.Get(0).(func(string) []models.PurchaseOrder); ok {
		r0 = rf(filePath)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.PurchaseOrder)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(filePath)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewINetworkPathService creates a new instance of INetworkPathService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewINetworkPathService(t interface {
	mock.TestingT
	Cleanup(func())
}) *INetworkPathService {
	mock := &INetworkPathService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
